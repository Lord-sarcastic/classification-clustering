#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Aug 29 14:47:20 2019

@author: doreen
"""

import pandas as pd
#scikit learn
from sklearn.tree import DecisionTreeClassifier # Import Decision Tree Classifier
from sklearn.model_selection import train_test_split # Import train_test_split function
from sklearn.tree import export_graphviz
from six import StringIO  
from IPython.display import Image
import pydotplus

#name all features
feature_cols = ['Dept', 'Age', 'EngScore']
#open the file containing the data
file = pd.read_csv('data.csv')
#assign features needed(X) to predict an outcome(Y)
X = file[feature_cols]
Y = file.TotalScore
X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=1)
clf = DecisionTreeClassifier(criterion="entropy", max_depth=6)
clf = clf.fit(X_train,y_train)
y_pred = clf.predict(X_test)
print("Accuracy:", metrics.accuracy_score(y_test, y_pred))

dot_data = StringIO()
export_graphviz(clf, out_file=dot_data,  
                filled=True, rounded=True,
                special_characters=True,feature_names = feature_cols,class_names=['Low','Medium','High'])
graph = pydotplus.graph_from_dot_data(dot_data.getvalue())  
graph.write_png('done5.png')
Image(graph.create_png())
#use below to test prediction and remember to use different samples as reference
#int(clf.predict([[1,1,18,16,276,10]]))
